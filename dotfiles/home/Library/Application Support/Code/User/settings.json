// Place your settings in this file to overwrite the default settings
{
	//
	//
	// editor window settings
	"window.restoreWindows": "none", // open empty new window
	"window.newWindowDimensions": "offset",
	"window.nativeTabs": true,
	"window.menuBarVisibility": "toggle", // hide menu bar - linux only
	"keyboard.touchbar.enabled": false, // disable macos touchbar
	"workbench.sideBar.location": "right",
	"workbench.colorTheme": "WarpOS", // theme
	"workbench.preferredDarkColorTheme": "WarpOS", // theme for os dark mode
	"workbench.editor.untitled.labelFormat": "name", // name of tab
	"workbench.editor.labelFormat": "short", // name of tab
	"problems.showCurrentInStatus": true,
	"workbench.activityBar.visible": true, // show the icons for panes
	"search.useIgnoreFiles": false, // use json editor instead of gui
	"workbench.statusBar.visible": true, // bottom blue bar
	"explorer.confirmDragAndDrop": false, // do not prompt on drag and drop
	"workbench.panel.defaultLocation": "right", // put cli panel on the right
	"search.quickOpen.includeHistory": false, // do not show recently opened files
	"explorer.autoReveal": false, // do not move explorer to the active file
	//
	//
	// full screen mode settings
	"zenMode.hideActivityBar": false,
	"zenMode.hideLineNumbers": false,
	"zenMode.hideStatusBar": false,
	"zenMode.hideTabs": false,
	//
	//
	// editor code window settings
	"editor.tabSize": 2, // each tab is 2 spaces
	"diffEditor.renderSideBySide": false, // inline diff editor
	"diffEditor.ignoreTrimWhitespace": false, // show me whitespace changes as well
	"editor.cursorStyle": "line",
	"editor.renderWhitespace": "boundary", // show whitespace not surrounded by text
	"editor.fontFamily": "Hack Nerd Font Mono, Hack, Menlo, Monaco, 'Courier New', monospace", // editor font
	"editor.lineNumbers": "on",
	"editor.scrollbar.verticalScrollbarSize": 4,
	"editor.scrollbar.horizontalScrollbarSize": 4,
	"editor.insertSpaces": false,
	"editor.renderIndentGuides": false,
	"editor.highlightActiveIndentGuide": false,
	"editor.minimap.enabled": false, // minimap on right - nice but not very useful
	"editor.fontLigatures": true, // ligatures
	"editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
	"editor.matchBrackets": "near",
	"editor.linkedEditing": true, // when renaming HTML tag, rename the other?
	"editor.formatOnSave": false, // do not format on every save
	"files.autoSave": "onFocusChange", // autosave when switching apps
	// word wrap settings
	"editor.wordWrap": "on", // wrap at either tab  or below
	"editor.wordWrapColumn": 160, // wrap at 160 chars
	"editor.wrappingIndent": "indent", // indent once when wrapping
	"editor.rulers": [80 ],// draw a line at 80 characters
	//
	//
	// code window popups / annoying behavior
	"references.preferredLocation": "view",
	"editor.suggest.showReferences": false,
	"editor.inlineSuggest.enabled": true,
	"workbench.editor.enablePreview": false, // disable annoying half-open
	"workbench.editor.enablePreviewFromQuickOpen": false, // disable half-open
	"markdown.preview.doubleClickToSwitchToEditor": false, // do not move my cursor when I click on markdown preview
	//
	//
	// terminal settings
	"terminal.integrated.defaultLocation": "editor",
	"terminal.integrated.fontFamily": "Hack, Menlo, Monaco, Consolas, \"Droid Sans Mono\", \"Courier New\", monospace, \"Droid Sans Fallback\"", // terminal font
	"terminal.integrated.tabs.enabled": true,
	"terminal.explorerKind": "external", // launch native terminal
	//
	//
	//
	//
	// git settings
	"git.autofetch": false,
	"git.enableSmartCommit": true, // commit all changes if nothing is staged
	"git.enableCommitSigning": false, // only works if you have a GPG key set up
	"git.autoStash": true, // stash changes before checking out another branch
	"git.inputValidationLength": 320, // limit the length of the commit message
	"git.inputValidationSubjectLength": 80,
	"git.confirmSync": false,
	"gitlab.instanceUrl": "https://git.liquidweb.com",
	"gitlab.enableExperimentalFeatures": true,
	"gitlab.showPipelineUpdateNotifications": false,
	//
	//
	// specific filetype settings
	"files.associations": {
		"*.yaml": "yaml",
		"*.plist": "xml",
		"*.spec": "RPMSpec"
	},
	"[html]": {
		"editor.defaultFormatter": "HookyQR.beautify"
	},
	"[json]": {
		"editor.defaultFormatter": "vscode.json-language-features"
	},
	"[dockerfile]": {
		"editor.defaultFormatter": "ms-azuretools.vscode-docker"
	},
	//
	//
	// random extension settings
	"vs-kubernetes": {
		"vscode-kubernetes.minikube-path.mac": "/Users/jack/.vs-kubernetes/tools/minikube/darwin-amd64/minikube"
	},
	"docker.showStartPage": false,
	"redhat.telemetry.enabled": false, // disable telemetry
	"diffEditor.wordWrap": "off",
	"github.copilot.enable": {
		"*": true,
		"yaml": true,
		"plaintext": true,
		"markdown": true
	},
	//
	//
	// vim settings
	"vim.foldfix": true, // move properly through folds
	"vim.handleKeys": { // keys for vim extension to ignore
		"<C-d>": false,
		"<C-s>": false,
		"<C-f>": false,
		"<C-b>": false,
		"<C-n>": false,
		"<C-w>": false,
		"<W-v>": false,
		"<C-S-e>": false,
		"<C-S-g>": false,
		"<C-E>": false,
		"<O-[>": false,
		"<O-]>": false,
		"<O-W-[>": false,
		"<O-W-]>": false,
	},
	//
	//
	// markdown settings
	"[markdown]": {
		"editor.wordWrap": "off",
	},
	"markdownlint.ignore": [
		"MD004/ul-style - Unordered list style"
	],
	"editor.codeActionsOnSave": {
		"source.fixAll.markdownlint": true
	},
	//
	// go language settings
	"go.formatTool": "gofumports",
	"go.toolsManagement.autoUpdate": true,
	"go.coverMode": "atomic",
	"go.buildOnSave": "package",
	"go.lintOnSave": "package",
	"go.vetOnSave": "package",
	"go.coverOnSave": true,
	"go.toolsEnvVars": {
		"CGO_ENABLED": 1, // enable cgo because macos
	},
	// Specifies Lint tool name.
	// "go.lintTool": "golangci-lint",
	// https://github.com/alecthomas/gometalinter#supported-linters
	"go.lintFlags": [
		"--enable=deadcode",
		"--enable=errcheck",
		"--enable=gosimple",
		"--enable=govet",
		"--enable=golint",
		"--enable=ineffassign",
		"--enable=staticcheck",
		"--enable=structcheck",
		"--enable=typecheck",
		"--enable=unused",
		"--enable=varcheck",
		"--enable=interfacer",
		"--enable=gosec",
		"--enable=bodyclose",
		"--enable=dupl",
		"--enable=errorlint",
		"--enable=goconst",
		"--enable=goimports",
		"--enable=misspell",
		"--enable=unparam",
		"--enable=gocritic",
		"--enable=noctx",
		"--enable=paralleltest",
		"--enable=unconvert",
		"--enable=sqlclosecheck",
		"--enable=gomnd",
	],
	//
	// python language settings
	"python.pythonPath": "python3",
	"python.defaultInterpreterPath": "python3",
	"notebook.cellToolbarLocation": {
		"default": "right",
		"jupyter-notebook": "left"
	},
	"workbench.editorAssociations": {
		"*.ipynb": "jupyter-notebook"
	},
	//
	//
	"shellformat.flag": "-ln bash",
	"shellcheck.exclude": [
		"2006"
	],
	//
	//
	// TODO extension settings
	"todo-tree.general.tags": [
		"BUG",
		"HACK",
		"FIXME",
		"TODO",
		"XXX",
		"[ ]",
		"[x]"
	],
	"todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
	//
	//
	// jira stuff
	"atlascode.jira.explorer.monitorEnabled": true,
	"atlascode.jira.statusbar.enabled": true,
	"atlascode.jira.statusbar.showProduct": true,
	"atlascode.bitbucket.enabled": false,
	"atlascode.jira.todoIssues.triggers": [
		"BUG:",
		"FIXME:"
	],
	"atlascode.jira.jqlList": [
		{
			"enabled": true,
			"id": "eadee164-98e4-4b42-9c00-050d2690de2f",
			"monitor": true,
			"name": "My liquidweb Issues",
			"query": "assignee = currentUser() AND resolution = Unresolved ORDER BY lastViewed DESC",
			"siteId": "f887abaf-ee6c-4820-9ee8-06ccf8456c7a"
		},
		{
			"enabled": true,
			"id": "247f39f9-2bdc-448c-901a-3b74ee73ad77",
			"monitor": false,
			"name": "past due CC",
			"query": "issuetype = Task AND project = CC AND status = Approved order by created DESC ",
			"siteId": "f887abaf-ee6c-4820-9ee8-06ccf8456c7a"
		},
		{
			"enabled": true,
			"id": "9bf8aa9c-2e5b-46f0-bc2e-5c1391f947ac",
			"monitor": false,
			"name": "CC On Deck",
			"query": "project = CC AND status = \"Waiting for Change Board\" order by created DESC ",
			"siteId": "f887abaf-ee6c-4820-9ee8-06ccf8456c7a"
		},
		{
			"enabled": true,
			"id": "7ba799c9-6dba-4af3-a984-64f8d52a1b52",
			"monitor": true,
			"name": "My CC",
			"query": "project = CC AND status NOT IN ('Change Implemented', 'Change Redacted', 'Denied') AND assignee in (currentUser()) order by created DESC",
			"siteId": "f887abaf-ee6c-4820-9ee8-06ccf8456c7a"
		}
	],
	"yaml.schemas": {
		"file:///Users/jack/.vscode/extensions/atlassian.atlascode-2.9.1/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
	},
	"github.copilot.inlineSuggest.count": 5,
}